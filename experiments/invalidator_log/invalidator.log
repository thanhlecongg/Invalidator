log/eval.txt
real positive: 109, real negative: 30
positive: 118, negative: 21
Accuracy: 0.892086 -- Precision: 0.898305 -- Recall: 0.972477 -- F1: 0.933921 -- AUC: 0.892661
Accuracy: 0.892086 -- Precision: 0.898305 -- Recall: 0.972477 -- F1: 0.933921 -- AUC: 0.892661
[Patch1]: Chart-1-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch1  Correctness:  Incorrect
[Patch152]: Lang-53-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch152  Correctness:  Incorrect
[Patch6]: Chart-5-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this.y has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
o1 has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::EXIT: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::EXIT: 	
this.y has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this.y == null
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
this.y == null
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
return has only one value
Patch:  Patch6  Correctness:  Incorrect
[Patch62]: Math-81-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.upperSpectra one of { 0.0, 65.67695023133969 }
org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles():::EXIT: 	
this.upperSpectra == 65.67695023133969
Patch:  Patch62  Correctness:  Incorrect
[Patch63]: Math-81-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.upperSpectra one of { 0.0, 65.67695023133969 }
org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles():::EXIT: 	
this.upperSpectra == 65.67695023133969
Patch:  Patch63  Correctness:  Incorrect
[Patch64]: Math-81-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.upperSpectra one of { 0.0, 65.67695023133969 }
org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles():::EXIT: 	
this.upperSpectra == 65.67695023133969
Patch:  Patch64  Correctness:  Incorrect
[Patch65]: Math-82-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch65  Correctness:  Incorrect
[Patch66]: Math-82-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch66  Correctness:  Incorrect
[Patch67]: Math-82-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch67  Correctness:  Incorrect
[Patch68]: Math-84-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch68  Correctness:  Incorrect
[Patch69]: Math-84-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch69  Correctness:  Incorrect
[Patch7]: Chart-5-Nopol2015 ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this.y has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
o1 has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::EXIT: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::EXIT: 	
this.y has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this.y == null
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
this.y == null
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
return has only one value
Patch:  Patch7  Correctness:  Correct
[Patch153]: Lang-58-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch72]: Math-85-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch72  Correctness:  Incorrect
[Patch73]: Math-87-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.util.MathUtils.equals(double, double):::ENTER: 	
y one of { -3.0, 0.0 }
org.apache.commons.math.util.MathUtils.equals(double, double, double):::ENTER: 	
y one of { -3.0, 0.0 }
Patch:  Patch73  Correctness:  Incorrect
[Patch74]: Math-88-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.RealVectorImpl.dotProduct(double[]):::ENTER: 	
v[] == [0.0, 1.0, 0.0]
org.apache.commons.math.linear.RealVectorImpl.dotProduct(double[]):::EXIT: 	
v[] == [0.0, 1.0, 0.0]
org.apache.commons.math.linear.RealVectorImpl.dotProduct(double[]):::EXIT: 	
return == 2.0
org.apache.commons.math.optimization.RealPointValuePair:::OBJECT: 	
this.point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.RealPointValuePair:::OBJECT: 	
this.value == 2.0
org.apache.commons.math.optimization.RealPointValuePair.RealPointValuePair(double[], double):::ENTER: 	
point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.RealPointValuePair.RealPointValuePair(double[], double):::ENTER: 	
value == 2.0
org.apache.commons.math.optimization.RealPointValuePair.RealPointValuePair(double[], double):::EXIT: 	
point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.RealPointValuePair.getPoint():::EXIT: 	
return[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(org.apache.commons.math.optimization.linear.LinearObjectiveFunction, java.util.Collection, org.apache.commons.math.optimization.GoalType, boolean):::EXIT: 	
return.point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(org.apache.commons.math.optimization.linear.LinearObjectiveFunction, java.util.Collection, org.apache.commons.math.optimization.GoalType, boolean):::EXIT: 	
return.value == 2.0
org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getValue(double[]):::ENTER: 	
point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getValue(double[]):::EXIT: 	
point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getValue(double[]):::EXIT: 	
return == 2.0
org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize():::EXIT: 	
return.point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize():::EXIT: 	
return.value == 2.0
org.apache.commons.math.optimization.linear.SimplexTableau.getSolution():::EXIT: 	
return.point[] == [0.0, 1.0, 0.0]
org.apache.commons.math.optimization.linear.SimplexTableau.getSolution():::EXIT: 	
return.value == 2.0
Patch:  Patch74  Correctness:  Incorrect
[Patch75]: Math-95-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch75  Correctness:  Incorrect
[Patch76]: Math-95-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.special.Beta$1:::OBJECT: 	
this.val$a == 0.5
org.apache.commons.math.special.Beta$1.(double, double):::ENTER: 	
$hidden$3 == 0.5
org.apache.commons.math.special.Beta.logBeta(double, double, double, int):::ENTER: 	
a == 0.5
org.apache.commons.math.special.Beta.regularizedBeta(double, double, double, double, int):::ENTER: 	
a == 0.5
Patch:  Patch76  Correctness:  Incorrect
[Patch77]: Math-97-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.analysis.UnivariateRealSolverImpl.setResult(double, int):::ENTER: 	
this.result == 0.0
Patch:  Patch77  Correctness:  Incorrect
[Patch78]: Math-104-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.special.Gamma.regularizedGammaP(double, double, double, int):::ENTER: 	
epsilon == 1.0E-8
org.apache.commons.math.special.Gamma.regularizedGammaQ(double, double, double, int):::ENTER: 	
epsilon == 1.0E-8
org.apache.commons.math.util.ContinuedFraction.evaluate(double, double, int):::ENTER: 	
epsilon == 1.0E-8
Patch:  Patch78  Correctness:  Incorrect
[Patch79]: Math-105-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch79  Correctness:  Incorrect
[Patch8]: Chart-7-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.data.time.TimePeriodValues.add(org.jfree.data.time.TimePeriod, double):::EXIT: 	
this.maxMiddleIndex one of { 0, 1, 3 }
Patch:  Patch8  Correctness:  Incorrect
[Patch154]: Math-2-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(double, int, int):::ENTER: 	
lower == -1
org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean():::EXIT: 	
return == -49.759350398538686
Patch:  Patch154  Correctness:  Incorrect
[Patch88]: Chart-9-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch88  Correctness:  Incorrect
[Patch89]: Chart-13-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch9]: Chart-13-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.chart.block.BlockContainer:::OBJECT: 	
size(this.blocks[]) one of { 0, 1, 2 }
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block):::ENTER: 	
this.blocks[] == []
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block):::ENTER: 	
this.blocks[].getClass().getName() == []
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block):::EXIT: 	
this.blocks[].getClass().getName() == [org.jfree.chart.block.EmptyBlock]
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block):::EXIT: 	
size(this.blocks[]) == 1
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block, java.lang.Object):::ENTER: 	
this.blocks[].getClass().getName() one of { [], [org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block, java.lang.Object):::ENTER: 	
size(this.blocks[]) one of { 0, 1 }
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block, java.lang.Object):::EXIT: 	
this.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BlockContainer.add(org.jfree.chart.block.Block, java.lang.Object):::EXIT: 	
size(this.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BlockContainer.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
this.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BlockContainer.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
size(this.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BlockContainer.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
this.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BlockContainer.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
return.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.BlockContainer.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
size(this.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BlockContainer.clear():::ENTER: 	
this.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BlockContainer.clear():::ENTER: 	
size(this.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BorderArrangement:::OBJECT: 	
this.topBlock == null
org.jfree.chart.block.BorderArrangement:::OBJECT: 	
this.bottomBlock == null
org.jfree.chart.block.BorderArrangement.add(org.jfree.chart.block.Block, java.lang.Object):::ENTER: 	
this.leftBlock == null
org.jfree.chart.block.BorderArrangement.add(org.jfree.chart.block.Block, java.lang.Object):::EXIT: 	
this.topBlock == orig(this.topBlock)
org.jfree.chart.block.BorderArrangement.add(org.jfree.chart.block.Block, java.lang.Object):::EXIT: 	
this.bottomBlock == orig(this.bottomBlock)
org.jfree.chart.block.BorderArrangement.arrange(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
container.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BorderArrangement.arrange(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
size(container.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BorderArrangement.arrange(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
container.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BorderArrangement.arrange(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
return.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.BorderArrangement.arrange(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
size(container.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
container.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
constraint.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
size(container.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
container.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
constraint.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
return.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.BorderArrangement.arrangeFF(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
size(container.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BorderArrangement.arrangeFN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, double):::ENTER: 	
container.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BorderArrangement.arrangeFN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, double):::ENTER: 	
size(container.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BorderArrangement.arrangeFN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, double):::EXIT: 	
container.blocks[].getClass().getName() one of { [org.jfree.chart.block.EmptyBlock], [org.jfree.chart.block.EmptyBlock, org.jfree.chart.block.EmptyBlock] }
org.jfree.chart.block.BorderArrangement.arrangeFN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, double):::EXIT: 	
return.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.BorderArrangement.arrangeFN(org.jfree.chart.block.BlockContainer, java.awt.Graphics2D, double):::EXIT: 	
size(container.blocks[]) one of { 1, 2 }
org.jfree.chart.block.BorderArrangement.clear():::EXIT: 	
this.topBlock == orig(this.topBlock)
org.jfree.chart.block.BorderArrangement.clear():::EXIT: 	
this.bottomBlock == orig(this.bottomBlock)
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
constraint.widthRange.lower == 0.0
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
constraint.widthRange.upper one of { 0.0, 10.0 }
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
constraint.heightRange == null
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::ENTER: 	
constraint.heightConstraintType.name.toString one of { "LengthConstraintType.FIXED", "LengthConstraintType.NONE" }
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
constraint.widthRange.lower == 0.0
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
constraint.widthRange.upper one of { 0.0, 10.0 }
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
constraint.heightRange == null
org.jfree.chart.block.EmptyBlock.arrange(java.awt.Graphics2D, org.jfree.chart.block.RectangleConstraint):::EXIT: 	
constraint.heightConstraintType.name.toString one of { "LengthConstraintType.FIXED", "LengthConstraintType.NONE" }
org.jfree.chart.block.RectangleConstraint:::OBJECT: 	
this.widthRange.lower one of { 0.0, 10.0 }
org.jfree.chart.block.RectangleConstraint:::OBJECT: 	
this.widthRange.upper one of { 0.0, 10.0 }
org.jfree.chart.block.RectangleConstraint:::OBJECT: 	
this.height >= 0.0
org.jfree.chart.block.RectangleConstraint:::OBJECT: 	
this.heightRange.upper == 0.0
org.jfree.chart.block.RectangleConstraint:::OBJECT: 	
this.heightConstraintType.name.toString one of { "LengthConstraintType.FIXED", "LengthConstraintType.NONE" }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, double):::ENTER: 	
w one of { -2.3000000000000007, 2.0, 10.0 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, double):::ENTER: 	
h one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, double):::EXIT: 	
this.width one of { -2.3000000000000007, 2.0, 10.0 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, double):::EXIT: 	
this.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::ENTER: 	
widthRange.lower one of { 0.0, 10.0 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::ENTER: 	
widthRange.upper one of { 0.0, 10.0 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::ENTER: 	
h >= 0.0
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::ENTER: 	
heightRange.upper == 0.0
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::ENTER: 	
heightConstraintType.name.toString one of { "LengthConstraintType.FIXED", "LengthConstraintType.NONE" }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::EXIT: 	
widthRange.lower one of { 0.0, 10.0 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::EXIT: 	
widthRange.upper one of { 0.0, 10.0 }
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::EXIT: 	
heightRange.upper == 0.0
org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType, double, org.jfree.data.Range, org.jfree.chart.block.LengthConstraintType):::EXIT: 	
heightConstraintType.name.toString one of { "LengthConstraintType.FIXED", "LengthConstraintType.NONE" }
org.jfree.chart.util.Size2D.getHeight():::ENTER: 	
this.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.util.Size2D.getHeight():::EXIT: 	
this.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.util.Size2D.getHeight():::EXIT: 	
return one of { 6.0, 16.0, 45.6 }
org.jfree.chart.util.Size2D.getWidth():::ENTER: 	
this.height one of { 6.0, 16.0, 45.6 }
org.jfree.chart.util.Size2D.getWidth():::EXIT: 	
this.height one of { 6.0, 16.0, 45.6 }
org.jfree.data.Range:::OBJECT: 	
this.lower one of { 0.0, 10.0 }
org.jfree.data.Range:::OBJECT: 	
this.upper one of { 0.0, 10.0 }
org.jfree.data.Range.Range(double, double):::ENTER: 	
lower one of { 0.0, 10.0 }
org.jfree.data.Range.Range(double, double):::ENTER: 	
upper one of { 0.0, 10.0 }
Patch:  Patch9  Correctness:  Incorrect
[Patch90]: Chart-17-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch91]: Chart-21-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.data.KeyedObject.getKey():::ENTER: 	
this has only one value
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER: 	
this.data[] elements has only one value
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] == [])  <==>  (return == -1)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] == [])  <==>  (this.data[].getClass().getName() == [])
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (return == 0)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (size(this.data[]) == 1)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (this.data[].getClass().getName() == [org.jfree.data.KeyedObject])
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (orig(this) has only one value)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data has only one value)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data[] elements has only one value)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data[].getClass().getName() elements == org.jfree.data.KeyedObject.class)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
this.data[] elements has only one value
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset:::OBJECT: 	
this.minimumRangeValueRow one of { -1, 0 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::EXIT: 	
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::EXIT: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::EXIT: 	
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::ENTER: 	
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::ENTER: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::ENTER: 	
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
return.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.minimumRangeValueRow == orig(this.minimumRangeValueRow)
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.maximumRangeValueRow == orig(this.maximumRangeValueRow)
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.minimumRangeValue == Double.NaN
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.maximumRangeValue == Double.NaN
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.maximumRangeValueRow one of { 0, 1 }
Patch:  Patch91  Correctness:  Incorrect
[Patch92]: Chart-25-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch92  Correctness:  Incorrect
[Patch155]: Math-4-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math3.geometry.euclidean.threed.Line.closestPoint(org.apache.commons.math3.geometry.euclidean.threed.Line):::EXIT: 	
return has only one value
org.apache.commons.math3.geometry.euclidean.threed.Line.contains(org.apache.commons.math3.geometry.euclidean.threed.Vector3D):::ENTER: 	
p has only one value
org.apache.commons.math3.geometry.euclidean.threed.Line.distance(org.apache.commons.math3.geometry.euclidean.threed.Vector3D):::ENTER: 	
p has only one value
org.apache.commons.math3.geometry.euclidean.threed.Vector3D.getNorm():::ENTER: 	
this has only one value
Patch:  Patch155  Correctness:  Incorrect
[Patch93]: Chart-26-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.chart.axis.CategoryAxis3D:::CLASS: 	
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == org.jfree.chart.util.UnitType.ABSOLUTE
org.jfree.chart.axis.CategoryAxis3D:::OBJECT: 	
this.plot == null
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.NumberAxis.DEFAULT_TICK_UNIT == this.tickUnit
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.NumberAxis.DEFAULT_TICK_UNIT.formatter == this.tickUnit.formatter
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.NumberAxis.DEFAULT_TICK_UNIT.size == this.tickUnit.size
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE.lower == this.range.lower
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE.upper == this.range.upper
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
this.range == this.defaultAutoRange
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == org.jfree.chart.util.UnitType.ABSOLUTE
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
this.range has only one value
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
this.plot == null
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.renderers.size == 1
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.columnRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.columnRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.rowRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.rowRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.foregroundAlpha == 1.0
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.renderers.size == 1
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.columnRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.columnRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.rowRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.rowRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.foregroundAlpha == 1.0
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
return.range.lower == 0.0
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
return.range.upper one of { 1.0, 1.05 }
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
return.plot.foregroundAlpha == 1.0
org.jfree.chart.plot.CategoryPlot.getRenderer(int):::ENTER: 	
index == 0
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.paint has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.stroke has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.outlinePaint has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.outlineStroke has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.labelFont has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.labelPaint has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.labelOffset has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.listenerList has only one value
org.jfree.chart.plot.ValueMarker:::OBJECT: 	
this.paint == this.outlinePaint
org.jfree.chart.plot.ValueMarker:::OBJECT: 	
this.labelPaint has only one value
org.jfree.chart.plot.ValueMarker:::OBJECT: 	
this.listenerList != null
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
column == 0
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(this.baseNegativeItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
column == 0
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(this.baseNegativeItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int):::ENTER: 	
this.paintList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int):::ENTER: 	
this.shapeList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::ENTER: 	
this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::ENTER: 	
this.shapeList.size one of { 0, 1 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::EXIT: 	
this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::EXIT: 	
this.shapeList.size one of { 0, 1 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::ENTER: 	
this.paintList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::ENTER: 	
this.shapeList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::EXIT: 	
this.paintList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::EXIT: 	
this.shapeList.size > orig(this.shapeList.size)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(this.baseNegativeItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.plot == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.orientation has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.orientation.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.domainAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rangeAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rowRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rowRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.foregroundAlpha == 1.0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.domainAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rangeAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rowRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rowRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.foregroundAlpha == 1.0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.orientation has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.orientation.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.domainAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rangeAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rowRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rowRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.foregroundAlpha == 1.0
org.jfree.chart.renderer.category.AreaRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.AreaRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.gradientPaintTransformer has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes.objects[].getClass().getName() == [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes.objects[].getClass().getName() == [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasets has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasets.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasets.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToDomainAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToDomainAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToDomainAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToRangeAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToRangeAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToRangeAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.StackedBarRenderer, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.noDataMessageFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.drawingSupplier has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.listenerList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.toolTipGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.toolTipGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseToolTipGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.urlGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.urlGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseURLGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.legendItemLabelGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleInLegendList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleInLegendList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.fillPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.fillPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlinePaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlinePaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.strokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.strokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlineStrokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlineStrokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.shapeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.shapeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelsVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelsVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelFontList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelFontList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseItemLabelFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.positiveItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.positiveItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.negativeItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.negativeItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.createEntitiesList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.createEntitiesList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.listenerList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.gradientPaintTransformer has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes.objects[].getClass().getName() == [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes.objects[].getClass().getName() == [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasets has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasets.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasets.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToDomainAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToDomainAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToDomainAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToRangeAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToRangeAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToRangeAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.StackedBarRenderer, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.noDataMessageFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.drawingSupplier has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.listenerList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.toolTipGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.toolTipGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseToolTipGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.urlGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.urlGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseURLGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.legendItemLabelGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleInLegendList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleInLegendList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.fillPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.fillPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlinePaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlinePaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.strokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.strokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlineStrokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlineStrokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.shapeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.shapeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelsVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelsVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelFontList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelFontList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseItemLabelFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.positiveItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.positiveItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.negativeItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.negativeItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.createEntitiesList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.createEntitiesList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.listenerList has only one value
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.baseToolTipGenerator == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.baseURLGenerator == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int, int):::ENTER: 	
item == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int, int):::ENTER: 	
item == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int, int):::ENTER: 	
item == 0
org.jfree.chart.renderer.category.LineRenderer3D:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LineRenderer3D:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.objectIcon == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.lastCategory == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.plot == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.rowCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.columnCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.size == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.size == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.min == 0.0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.max == 0.0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxisLocations has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxisLocations.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxisLocations has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxisLocations.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.StackedBarRenderer, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.noDataMessageFont has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.drawingSupplier has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.listenerList has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes.objects[this.plot.domainAxes.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes.objects[this.plot.rangeAxes.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder == this.plot.rowRenderingOrder
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder.name == this.plot.rowRenderingOrder.name
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.StackedBarRenderer3D.findRangeBounds(org.jfree.data.category.CategoryDataset):::ENTER: 	
org.jfree.chart.util.SortOrder.ASCENDING == this.plot.rowRenderingOrder
org.jfree.chart.renderer.category.StackedBarRenderer3D.findRangeBounds(org.jfree.data.category.CategoryDataset):::EXIT: 	
org.jfree.chart.util.SortOrder.ASCENDING == this.plot.rowRenderingOrder
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.text.TextBlock.calculateOffsets(org.jfree.chart.text.TextBlockAnchor, double, double):::ENTER: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextBlock.calculateOffsets(org.jfree.chart.text.TextBlockAnchor, double, double):::EXIT: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextBlock.draw(java.awt.Graphics2D, float, float, org.jfree.chart.text.TextBlockAnchor, float, float, double):::ENTER: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextBlock.draw(java.awt.Graphics2D, float, float, org.jfree.chart.text.TextBlockAnchor, float, float, double):::EXIT: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextUtilities.drawRotatedString(java.lang.String, java.awt.Graphics2D, float, float, double, float, float):::ENTER: 	
angle == 0.0
org.jfree.chart.util.GradientPaintTransformType.equals(java.lang.Object):::ENTER: 	
this.name.toString == "GradientPaintTransformType.VERTICAL"
org.jfree.chart.util.GradientPaintTransformType.equals(java.lang.Object):::EXIT: 	
orig(obj) has only one value
org.jfree.chart.util.ObjectList.get(int):::ENTER: 	
this.size one of { 1, 2 }
org.jfree.chart.util.ObjectList.get(int):::ENTER: 	
index one of { 0, 1 }
org.jfree.chart.util.ObjectList.get(int):::EXIT: 	
this.size one of { 1, 2 }
org.jfree.chart.util.ShapeList.getShape(int):::ENTER: 	
this.size one of { 0, 1, 2 }
org.jfree.chart.util.ShapeList.getShape(int):::EXIT: 	
this.size one of { 0, 1, 2 }
org.jfree.chart.util.ShapeList.getShape(int):::EXIT: 	
return == null
org.jfree.data.KeyedObject.getKey():::ENTER: 	
this.key has only one value
org.jfree.data.KeyedObject.getKey():::ENTER: 	
this.object.getClass().getName() == org.jfree.data.statistics.MeanAndStandardDeviation.class
org.jfree.data.KeyedObject.getKey():::EXIT: 	
this.key has only one value
org.jfree.data.KeyedObject.getKey():::EXIT: 	
this.object.getClass().getName() == org.jfree.data.statistics.MeanAndStandardDeviation.class
org.jfree.data.KeyedObject.getKey():::EXIT: 	
return has only one value
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER: 	
this.data[].getClass().getName() one of { [], [org.jfree.data.KeyedObject] }
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER: 	
size(this.data[]) one of { 0, 1 }
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
this.data[].getClass().getName() one of { [], [org.jfree.data.KeyedObject] }
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
return == -1
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
size(this.data[]) one of { 0, 1 }
org.jfree.data.Range.contains(double):::ENTER: 	
this.lower == 0.0
org.jfree.data.Range.contains(double):::ENTER: 	
this.upper one of { 194.0, 294.0 }
Patch:  Patch93  Correctness:  Incorrect
[PatchHDRepair1]: Lang-57-HDRepair ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[PatchHDRepair3]: Math-22-HDRepair ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[PatchHDRepair4]: Math-34-HDRepair ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[PatchHDRepair5]: Math-50-HDRepair ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[PatchHDRepair6]: Math-53-HDRepair ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.complex.Complex.getImaginary():::ENTER: 	
this.real one of { 1.0, Double.NaN }
org.apache.commons.math.complex.Complex.getImaginary():::EXIT: 	
this.real one of { 1.0, Double.NaN }
Patch:  PatchHDRepair6  Correctness:  Incorrect
[PatchHDRepair7]: Math-70-HDRepair ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[PatchHDRepair8]: Math-82-HDRepair ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  PatchHDRepair8  Correctness:  Incorrect
[PatchHDRepair9]: Math-85-HDRepair ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch157]: Math-24-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch157  Correctness:  Incorrect
[Patch158]: Math-28-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch159]: Math-33-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch16]: Chart-25-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch16  Correctness:  Incorrect
[Patch160]: Math-39-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch161]: Math-40-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch161  Correctness:  Incorrect
[Patch10]: Chart-13-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch162]: Math-41-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch163]: Math-42-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.ArrayRealVector.dotProduct(org.apache.commons.math.linear.RealVector):::EXIT: 	
return == 0.0
org.apache.commons.math.optimization.RealPointValuePair:::OBJECT: 	
this.value == 0.0
org.apache.commons.math.optimization.RealPointValuePair.RealPointValuePair(double[], double):::ENTER: 	
value == 0.0
org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.optimize(org.apache.commons.math.optimization.linear.LinearObjectiveFunction, java.util.Collection, org.apache.commons.math.optimization.GoalType, boolean):::EXIT: 	
return.value == 0.0
org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getValue(double[]):::EXIT: 	
return == 0.0
org.apache.commons.math.optimization.linear.SimplexSolver.doOptimize():::EXIT: 	
return.value == 0.0
org.apache.commons.math.optimization.linear.SimplexTableau.getSolution():::EXIT: 	
return.value == 0.0
Patch:  Patch163  Correctness:  Incorrect
[Patch165]: Math-49-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.OpenMapRealVector.setEntry(int, double):::EXIT: 	
this.entries.keys[] >= orig(this.entries.keys[]) (elementwise)
org.apache.commons.math.util.OpenIntToDoubleHashMap$Iterator.Iterator(org.apache.commons.math.util.OpenIntToDoubleHashMap):::EXIT: 	
org.apache.commons.math.util.OpenIntToDoubleHashMap.this.values[] == [1.0, 0.0, 2.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
Patch:  Patch165  Correctness:  Incorrect
[Patch166]: Math-50-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch166  Correctness:  Incorrect
[Patch167]: Math-57-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.stat.clustering.Cluster:::OBJECT: 	
this.center has only one value
org.apache.commons.math.stat.clustering.Cluster.Cluster(org.apache.commons.math.stat.clustering.Clusterable):::ENTER: 	
center has only one value
org.apache.commons.math.stat.clustering.Cluster.addPoint(org.apache.commons.math.stat.clustering.Clusterable):::ENTER: 	
this has only one value
org.apache.commons.math.stat.clustering.Cluster.addPoint(org.apache.commons.math.stat.clustering.Clusterable):::ENTER: 	
this.points has only one value
org.apache.commons.math.stat.clustering.Cluster.addPoint(org.apache.commons.math.stat.clustering.Clusterable):::EXIT: 	
this.points has only one value
org.apache.commons.math.stat.clustering.Cluster.getCenter():::EXIT: 	
return has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p.point has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p.point[] == [0]
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p.point[] elements == 0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::EXIT: 	
p.point has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::EXIT: 	
p.point[] == [0]
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::EXIT: 	
p.point[] elements == 0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.point has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.point[] == [0]
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.point[] elements == 0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint.point has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint.point[] == [0]
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint.point[] elements == 0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint.point has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint.point[] == [0]
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint.point[] elements == 0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint.point has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint.point[] == [0]
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint.point[] elements == 0
Patch:  Patch167  Correctness:  Incorrect
[Patch168]: Math-58-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction$1:::OBJECT: 	
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.this.f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction$1.(org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction):::ENTER: 	
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.this.f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction:::OBJECT: 	
this.f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.TheoreticalValuesFunction(org.apache.commons.math.optimization.fitting.CurveFitter, org.apache.commons.math.analysis.ParametricUnivariateRealFunction):::ENTER: 	
f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost():::ENTER: 	
this.objective[] elements == 0.0
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost():::ENTER: 	
this.weightedResiduals[] elements == 0.0
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost():::EXIT: 	
this.cost % orig(this.cost) == 0
Patch:  Patch168  Correctness:  Incorrect
[Patch169]: Math-69-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.BlockRealMatrix.getEntry(int, int):::EXIT: 	
return one of { 0.0, 0.9999961516947906 }
Patch:  Patch169  Correctness:  Incorrect
[Patch17]: Chart-25-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch17  Correctness:  Incorrect
[Patch170]: Math-73-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch170  Correctness:  Incorrect
[Patch171]: Math-78-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double):::EXIT: 	
this.interpolatedTime != orig(this.interpolatedTime)
Patch:  Patch171  Correctness:  Incorrect
[Patch11]: Chart-13-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch11  Correctness:  Incorrect
[Patch172]: Math-80-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.tType one of { -2, 0 }
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.dMin == 0.0
org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(double[], double[], double):::EXIT: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.decompose():::EXIT: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(int):::ENTER: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(int):::EXIT: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues():::ENTER: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues():::EXIT: 	
this.tType == -2
Patch:  Patch172  Correctness:  Incorrect
[Patch173]: Math-81-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.upperSpectra one of { 0.0, 65.67695023133969 }
org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles():::EXIT: 	
this.upperSpectra == 65.67695023133969
Patch:  Patch173  Correctness:  Incorrect
[Patch174]: Math-85-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch175]: Math-87-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.util.MathUtils.equals(double, double):::ENTER: 	
y one of { -3.0, 0.0 }
org.apache.commons.math.util.MathUtils.equals(double, double, double):::ENTER: 	
y one of { -3.0, 0.0 }
Patch:  Patch175  Correctness:  Incorrect
[Patch176]: Math-88-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch176  Correctness:  Incorrect
[Patch177]: Math-105-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch177  Correctness:  Incorrect
[Patch18]: Chart-26-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.chart.axis.CategoryAxis3D:::CLASS: 	
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == org.jfree.chart.util.UnitType.ABSOLUTE
org.jfree.chart.axis.CategoryAxis3D:::OBJECT: 	
this.plot == null
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.NumberAxis.DEFAULT_TICK_UNIT == this.tickUnit
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.NumberAxis.DEFAULT_TICK_UNIT.formatter == this.tickUnit.formatter
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.NumberAxis.DEFAULT_TICK_UNIT.size == this.tickUnit.size
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE.lower == this.range.lower
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.axis.ValueAxis.DEFAULT_RANGE.upper == this.range.upper
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
this.range == this.defaultAutoRange
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
org.jfree.chart.util.RectangleInsets.ZERO_INSETS.unitType == org.jfree.chart.util.UnitType.ABSOLUTE
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
this.range has only one value
org.jfree.chart.axis.NumberAxis3D:::OBJECT: 	
this.plot == null
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.renderers.size == 1
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.columnRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.columnRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.rowRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.rowRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::ENTER: 	
this.foregroundAlpha == 1.0
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.renderers.size == 1
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.columnRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.columnRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.rowRenderingOrder has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.rowRenderingOrder.name has only one value
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
this.foregroundAlpha == 1.0
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
return.range.lower == 0.0
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
return.range.upper one of { 1.0, 1.05 }
org.jfree.chart.plot.CategoryPlot.getRangeAxis(int):::EXIT: 	
return.plot.foregroundAlpha == 1.0
org.jfree.chart.plot.CategoryPlot.getRenderer(int):::ENTER: 	
index == 0
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.paint has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.stroke has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.outlinePaint has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.outlineStroke has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.labelFont has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.labelPaint has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.labelOffset has only one value
org.jfree.chart.plot.IntervalMarker:::OBJECT: 	
this.listenerList has only one value
org.jfree.chart.plot.ValueMarker:::OBJECT: 	
this.paint == this.outlinePaint
org.jfree.chart.plot.ValueMarker:::OBJECT: 	
this.labelPaint has only one value
org.jfree.chart.plot.ValueMarker:::OBJECT: 	
this.listenerList != null
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::ENTER: 	
column == 0
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(this.baseNegativeItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::ENTER: 	
column == 0
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(this.baseNegativeItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int, int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int):::ENTER: 	
this.paintList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int):::ENTER: 	
this.shapeList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::ENTER: 	
this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::ENTER: 	
this.shapeList.size one of { 0, 1 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::EXIT: 	
this.shapeList.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [java.awt.geom.Rectangle2D.Double, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int):::EXIT: 	
this.shapeList.size one of { 0, 1 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::ENTER: 	
this.paintList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::ENTER: 	
this.shapeList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::EXIT: 	
this.paintList.size one of { 0, 1, 2 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int):::EXIT: 	
this.shapeList.size > orig(this.shapeList.size)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor == org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == this.baseNegativeItemLabelPosition.itemLabelAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE6 == orig(this.baseNegativeItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.labels.ItemLabelAnchor.OUTSIDE12 == orig(this.basePositiveItemLabelPosition.itemLabelAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor == org.jfree.chart.text.TextAnchor.BOTTOM_CENTER
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == this.baseNegativeItemLabelPosition.textAnchor
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.text.TextAnchor.TOP_CENTER == orig(this.baseNegativeItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
org.jfree.chart.text.TextAnchor.BOTTOM_CENTER == orig(this.basePositiveItemLabelPosition.textAnchor)
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.shapeList.size one of { 1, 2, 3 }
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE12"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.BOTTOM_CENTER"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.OUTSIDE6"
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int):::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.TOP_CENTER"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.plot == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.orientation has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.orientation.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.domainAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rangeAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rowRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rowRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::ENTER: 	
plot.foregroundAlpha == 1.0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.domainAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rangeAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rowRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rowRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.plot.foregroundAlpha == 1.0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.orientation has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.orientation.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.domainAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rangeAxes.objects[].getClass().getName() one of { [null, null, null, null, null, null, null, null], [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null] }
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rowRenderingOrder has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rowRenderingOrder.name has only one value
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.rowRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(org.jfree.chart.plot.CategoryPlot):::EXIT: 	
plot.foregroundAlpha == 1.0
org.jfree.chart.renderer.category.AreaRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.AreaRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.BarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.BarRenderer3D:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.gradientPaintTransformer has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxes.objects[].getClass().getName() == [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxes.objects[].getClass().getName() == [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasets has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasets.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasets.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToDomainAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToDomainAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToDomainAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToRangeAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToRangeAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.datasetToRangeAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.StackedBarRenderer, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.noDataMessageFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.drawingSupplier has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.plot.listenerList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.toolTipGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.toolTipGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseToolTipGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.urlGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.urlGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseURLGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.legendItemLabelGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleInLegendList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.seriesVisibleInLegendList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.fillPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.fillPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlinePaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlinePaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.strokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.strokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlineStrokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.outlineStrokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.shapeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.shapeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelsVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelsVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelFontList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelFontList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseItemLabelFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.itemLabelPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.positiveItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.positiveItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.negativeItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.negativeItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.createEntitiesList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.createEntitiesList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::ENTER: 	
this.listenerList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.gradientPaintTransformer has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxes.objects[].getClass().getName() == [org.jfree.chart.axis.CategoryAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxes.objects[].getClass().getName() == [org.jfree.chart.axis.NumberAxis, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxisLocations has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeAxisLocations.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasets has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasets.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasets.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToDomainAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToDomainAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToDomainAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToRangeAxisMap has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToRangeAxisMap.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.datasetToRangeAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.StackedBarRenderer, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.noDataMessageFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.drawingSupplier has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.plot.listenerList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.toolTipGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.toolTipGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseToolTipGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.urlGeneratorList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.urlGeneratorList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseURLGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.legendItemLabelGenerator has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleInLegendList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.seriesVisibleInLegendList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.fillPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.fillPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlinePaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlinePaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.strokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.strokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlineStrokeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.outlineStrokeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.shapeList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.shapeList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelsVisibleList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelsVisibleList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelFontList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelFontList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseItemLabelFont has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelPaintList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.itemLabelPaintList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.positiveItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.positiveItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.basePositiveItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.negativeItemLabelPositionList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.negativeItemLabelPositionList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.itemLabelAnchor.name.toString == "ItemLabelAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.baseNegativeItemLabelPosition.textAnchor.name.toString == "TextAnchor.CENTER"
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.createEntitiesList has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.createEntitiesList.objects has only one value
org.jfree.chart.renderer.category.BarRenderer.getBase():::EXIT: 	
this.listenerList has only one value
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.BoxAndWhiskerRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.baseToolTipGenerator == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.baseURLGenerator == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.GanttRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.GroupedStackedBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.IntervalBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.LayeredBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.LevelRenderer:::OBJECT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int, int):::ENTER: 	
item == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int, int):::ENTER: 	
item == 0
org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int, int):::ENTER: 	
item == 0
org.jfree.chart.renderer.category.LineRenderer3D:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.LineRenderer3D:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.objectIcon == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.lastCategory == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.plot == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.rowCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.columnCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.paintList.size == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer$2:::OBJECT: 	
org.jfree.chart.renderer.category.MinMaxCategoryRenderer.this.shapeList.size == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.min == 0.0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.max == 0.0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.MinMaxCategoryRenderer:::OBJECT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StackedAreaRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxisLocations has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxisLocations.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxisLocations has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxisLocations.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects[] has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects[].getClass().getName() == [org.jfree.chart.renderer.category.StackedBarRenderer, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.noDataMessageFont has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.drawingSupplier has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.listenerList has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.domainAxes.objects[this.plot.domainAxes.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.rangeAxes.objects[this.plot.rangeAxes.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasets.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToDomainAxisMap.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.datasetToRangeAxisMap.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.plot.renderers.objects[this.plot.datasets.size-1] has only one value
org.jfree.chart.renderer.category.StackedBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder == org.jfree.chart.util.SortOrder.ASCENDING
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder == this.plot.rowRenderingOrder
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder.name == this.plot.rowRenderingOrder.name
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder.name has only one value
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.columnRenderingOrder.name.toString == "SortOrder.ASCENDING"
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StackedBarRenderer3D:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.renderer.category.StackedBarRenderer3D.findRangeBounds(org.jfree.data.category.CategoryDataset):::ENTER: 	
org.jfree.chart.util.SortOrder.ASCENDING == this.plot.rowRenderingOrder
org.jfree.chart.renderer.category.StackedBarRenderer3D.findRangeBounds(org.jfree.data.category.CategoryDataset):::EXIT: 	
org.jfree.chart.util.SortOrder.ASCENDING == this.plot.rowRenderingOrder
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StatisticalBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.plot == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[] elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer:::OBJECT: 	
this.shapeList.size == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_GRIDLINE_STROKE == org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_STROKE
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_PAINT
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.CategoryPlot.DEFAULT_CROSSHAIR_PAINT == this.basePaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation == org.jfree.chart.plot.PlotOrientation.VERTICAL
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.axisOffset.unitType == org.jfree.chart.plot.Plot.DEFAULT_INSETS.unitType
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS == this.plot.insets
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.top == this.plot.insets.top
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.left == this.plot.insets.left
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.bottom == this.plot.insets.bottom
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_INSETS.right == this.plot.insets.right
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_STROKE == this.plot.outlineStroke
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.plot.outlinePaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == org.jfree.chart.renderer.AbstractRenderer.DEFAULT_OUTLINE_PAINT
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_OUTLINE_PAINT == this.baseOutlinePaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.plot.backgroundPaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
org.jfree.chart.plot.Plot.DEFAULT_BACKGROUND_PAINT == this.baseFillPaint
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.upperClip == 0.0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.lowerClip == 0.0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation has only one value
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation.name has only one value
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.orientation.name.toString == "PlotOrientation.VERTICAL"
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.domainGridlinePosition == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.domainGridlineStroke == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.domainGridlinePaint == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeGridlinesVisible == false
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeGridlineStroke == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeGridlinePaint == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairStroke == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.rangeCrosshairPaint == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.foregroundDomainMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.backgroundDomainMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.foregroundRangeMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.backgroundRangeMarkers == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.plot.annotations == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.rowCount == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.columnCount == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[] contains only nulls and has only one value, of length 8
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() == [null, null, null, null, null, null, null, null]
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[].getClass().getName() elements == null
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.size == 0
org.jfree.chart.renderer.category.WaterfallBarRenderer:::OBJECT: 	
this.paintList.objects[] elements == this.paintList.objects[this.paintList.increment-1]
org.jfree.chart.text.TextBlock.calculateOffsets(org.jfree.chart.text.TextBlockAnchor, double, double):::ENTER: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextBlock.calculateOffsets(org.jfree.chart.text.TextBlockAnchor, double, double):::EXIT: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextBlock.draw(java.awt.Graphics2D, float, float, org.jfree.chart.text.TextBlockAnchor, float, float, double):::ENTER: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextBlock.draw(java.awt.Graphics2D, float, float, org.jfree.chart.text.TextBlockAnchor, float, float, double):::EXIT: 	
anchor.name.toString one of { "TextBlockAnchor.TOP_CENTER", "TextBlockAnchor.TOP_LEFT" }
org.jfree.chart.text.TextUtilities.drawRotatedString(java.lang.String, java.awt.Graphics2D, float, float, double, float, float):::ENTER: 	
angle == 0.0
org.jfree.chart.util.GradientPaintTransformType.equals(java.lang.Object):::ENTER: 	
this.name.toString == "GradientPaintTransformType.VERTICAL"
org.jfree.chart.util.GradientPaintTransformType.equals(java.lang.Object):::EXIT: 	
orig(obj) has only one value
org.jfree.chart.util.ObjectList.get(int):::ENTER: 	
this.size one of { 1, 2 }
org.jfree.chart.util.ObjectList.get(int):::ENTER: 	
index one of { 0, 1 }
org.jfree.chart.util.ObjectList.get(int):::EXIT: 	
this.size one of { 1, 2 }
org.jfree.chart.util.ShapeList.getShape(int):::ENTER: 	
this.size one of { 0, 1, 2 }
org.jfree.chart.util.ShapeList.getShape(int):::EXIT: 	
this.size one of { 0, 1, 2 }
org.jfree.chart.util.ShapeList.getShape(int):::EXIT: 	
return == null
org.jfree.data.KeyedObject.getKey():::ENTER: 	
this.key has only one value
org.jfree.data.KeyedObject.getKey():::ENTER: 	
this.object.getClass().getName() == org.jfree.data.statistics.MeanAndStandardDeviation.class
org.jfree.data.KeyedObject.getKey():::EXIT: 	
this.key has only one value
org.jfree.data.KeyedObject.getKey():::EXIT: 	
this.object.getClass().getName() == org.jfree.data.statistics.MeanAndStandardDeviation.class
org.jfree.data.KeyedObject.getKey():::EXIT: 	
return has only one value
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER: 	
this.data[].getClass().getName() one of { [], [org.jfree.data.KeyedObject] }
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER: 	
size(this.data[]) one of { 0, 1 }
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
this.data[].getClass().getName() one of { [], [org.jfree.data.KeyedObject] }
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
return == -1
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
size(this.data[]) one of { 0, 1 }
org.jfree.data.Range.contains(double):::ENTER: 	
this.lower == 0.0
org.jfree.data.Range.contains(double):::ENTER: 	
this.upper one of { 194.0, 294.0 }
Patch:  Patch18  Correctness:  Incorrect
[Patch12]: Chart-15-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.chart.plot.PiePlot3D:::OBJECT: 	
org.jfree.chart.plot.Plot.class$org$jfree$chart$event$PlotChangeListener == null
org.jfree.chart.plot.PiePlot3D:::OBJECT: 	
this.insets has only one value
org.jfree.chart.plot.PiePlot3D:::OBJECT: 	
this.insets.top == 4.0
org.jfree.chart.plot.PiePlot3D:::OBJECT: 	
this.insets.left == 8.0
org.jfree.chart.plot.PiePlot3D:::OBJECT: 	
this.insets.bottom == 4.0
org.jfree.chart.plot.PiePlot3D:::OBJECT: 	
this.insets.right == 8.0
Patch:  Patch12  Correctness:  Incorrect
[Patch188]: Chart-14-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch189]: Chart-19-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch19]: Chart-26-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch191]: Lang-24-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch192]: Lang-35-ACS ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch13]: Chart-15-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch13  Correctness:  Incorrect
[Patch193]: Lang-39-ACS ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch193  Correctness:  Incorrect
[Patch194]: Math-3-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch195]: Math-4-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch196]: Math-5-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch197]: Math-25-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch198]: Math-28-ACS ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch198  Correctness:  Incorrect
[Patch199]: Math-35-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch2]: Chart-1-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch2  Correctness:  Incorrect
[Patch20]: Lang-39-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch201]: Math-73-ACS ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch14]: Chart-21-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.data.KeyedObject.getKey():::ENTER: 	
this has only one value
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::ENTER: 	
this.data[] elements has only one value
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] == [])  <==>  (return == -1)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] == [])  <==>  (this.data[].getClass().getName() == [])
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (return == 0)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (size(this.data[]) == 1)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  <==>  (this.data[].getClass().getName() == [org.jfree.data.KeyedObject])
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (orig(this) has only one value)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data has only one value)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data[] elements has only one value)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
(this.data[] contains no nulls and has only one value, of length 1)  ==>  (this.data[].getClass().getName() elements == org.jfree.data.KeyedObject.class)
org.jfree.data.KeyedObjects.getIndex(java.lang.Comparable):::EXIT: 	
this.data[] elements has only one value
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset:::OBJECT: 	
this.minimumRangeValueRow one of { -1, 0 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::EXIT: 	
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::EXIT: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(org.jfree.data.statistics.BoxAndWhiskerItem, java.lang.Comparable, java.lang.Comparable):::EXIT: 	
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::ENTER: 	
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::ENTER: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::ENTER: 	
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
this.minimumRangeValue one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
this.rangeBounds.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean):::EXIT: 	
return.lower one of { 7.0, 7.5, 8.6 }
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.minimumRangeValueRow == orig(this.minimumRangeValueRow)
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.maximumRangeValueRow == orig(this.maximumRangeValueRow)
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.minimumRangeValue == Double.NaN
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.minimumRangeValueRow == 0
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.maximumRangeValue == Double.NaN
org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds():::EXIT: 	
this.maximumRangeValueRow one of { 0, 1 }
Patch:  Patch14  Correctness:  Incorrect
[Patch202]: Math-81-ACS ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.upperSpectra one of { 0.0, 65.67695023133969 }
org.apache.commons.math.linear.EigenDecompositionImpl.computeGershgorinCircles():::EXIT: 	
this.upperSpectra == 65.67695023133969
Patch:  Patch202  Correctness:  Incorrect
[Patch203]: Math-82-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch204]: Math-85-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch205]: Math-89-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch206]: Math-90-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch207]: Math-93-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch208]: Math-97-ACS ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch208  Correctness:  Incorrect
[Patch209]: Math-99-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch21]: Lang-44-Nopol2015 ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch21  Correctness:  Correct
[Patch15]: Chart-25-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch15  Correctness:  Incorrect
[Patch22]: Lang-46-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.lang.StringEscapeUtils.escapeJava(java.lang.String):::EXIT: 	
return.toString == "String with a slash (\\/) in it"
Patch:  Patch22  Correctness:  Incorrect
[Patch23]: Lang-51-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch24]: Lang-53-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch24  Correctness:  Incorrect
[Patch25]: Lang-55-Nopol2015 ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch26]: Lang-58-Nopol2015 ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.lang.StringUtils.isEmpty(java.lang.String):::ENTER: 	
str.toString one of { "", "1" }
org.apache.commons.lang.StringUtils.isEmpty(java.lang.String):::EXIT: 	
str.toString == "1"
org.apache.commons.lang.StringUtils.isEmpty(java.lang.String):::EXIT: 	
return == false
Patch:  Patch26  Correctness:  Correct
[Patch27]: Math-2-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(double, int, int):::ENTER: 	
lower == -1
org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean():::EXIT: 	
return == -49.759350398538686
Patch:  Patch27  Correctness:  Incorrect
[Patch28]: Math-2-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math3.distribution.AbstractIntegerDistribution.solveInverseCumulativeProbability(double, int, int):::ENTER: 	
lower == -1
org.apache.commons.math3.distribution.HypergeometricDistribution.getNumericalMean():::EXIT: 	
return == -49.759350398538686
Patch:  Patch28  Correctness:  Incorrect
[Patch29]: Math-5-jGenprog ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch30]: Math-8-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch30  Correctness:  Incorrect
[Patch31]: Math-8-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch31  Correctness:  Incorrect
[Patch150]: Lang-44-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch32]: Math-28-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch32  Correctness:  Incorrect
[Patch33]: Math-28-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch33  Correctness:  Incorrect
[Patch34]: Math-32-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch36]: Math-33-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch37]: Math-40-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch37  Correctness:  Incorrect
[Patch38]: Math-40-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch38  Correctness:  Incorrect
[Patch4]: Chart-3-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.data.time.TimeSeries.add(org.jfree.data.time.TimeSeriesDataItem):::ENTER: 	
this.minY == 100.0
org.jfree.data.time.TimeSeries.add(org.jfree.data.time.TimeSeriesDataItem):::ENTER: 	
this.maxY == 102.0
Patch:  Patch4  Correctness:  Incorrect
[Patch44]: Math-50-jGenprog ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch45]: Math-50-jKali ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch46]: Math-50-Nopol2015 ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch151]: Lang-51-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch47]: Math-53-jGenprog ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch48]: Math-57-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.stat.clustering.Cluster:::OBJECT: 	
this.center has only one value
org.apache.commons.math.stat.clustering.Cluster.Cluster(org.apache.commons.math.stat.clustering.Clusterable):::ENTER: 	
center has only one value
org.apache.commons.math.stat.clustering.Cluster.addPoint(org.apache.commons.math.stat.clustering.Clusterable):::ENTER: 	
this has only one value
org.apache.commons.math.stat.clustering.Cluster.addPoint(org.apache.commons.math.stat.clustering.Clusterable):::ENTER: 	
this.points has only one value
org.apache.commons.math.stat.clustering.Cluster.addPoint(org.apache.commons.math.stat.clustering.Clusterable):::EXIT: 	
this.points has only one value
org.apache.commons.math.stat.clustering.Cluster.getCenter():::EXIT: 	
return has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p.point has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p.point[] == [0]
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::ENTER: 	
p.point[] elements == 0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::EXIT: 	
p.point has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::EXIT: 	
p.point[] == [0]
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.EuclideanIntegerPoint):::EXIT: 	
p.point[] elements == 0
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.point has only one value
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.point[] == [0]
org.apache.commons.math.stat.clustering.EuclideanIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.point[] elements == 0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint.point has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint.point[] == [0]
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::ENTER: 	
p.euclideanPoint.point[] elements == 0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint.point has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint.point[] == [0]
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.distanceFrom(org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint):::EXIT: 	
p.euclideanPoint.point[] elements == 0
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint.point has only one value
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint.point[] == [0]
org.apache.commons.math.stat.clustering.KMeansPlusPlusClustererTest$CloseIntegerPoint.equals(java.lang.Object):::ENTER: 	
this.euclideanPoint.point[] elements == 0
Patch:  Patch48  Correctness:  Incorrect
[Patch49]: Math-58-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.optimization.direct.BaseAbstractVectorialOptimizer.computeObjectiveValue(double[]):::EXIT: 	
return[] sorted by <
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction$1:::OBJECT: 	
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.this.f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction$1.(org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction):::ENTER: 	
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.this.f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction:::OBJECT: 	
this.f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.TheoreticalValuesFunction(org.apache.commons.math.optimization.fitting.CurveFitter, org.apache.commons.math.analysis.ParametricUnivariateRealFunction):::ENTER: 	
f.getClass().getName() == org.apache.commons.math.analysis.function.Gaussian$Parametric.class
org.apache.commons.math.optimization.fitting.CurveFitter$TheoreticalValuesFunction.value(double[]):::EXIT: 	
return[] sorted by <
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost():::ENTER: 	
this.objective[] elements == 0.0
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost():::ENTER: 	
this.weightedResiduals[] elements == 0.0
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost():::EXIT: 	
this.objective[] sorted by <
org.apache.commons.math.optimization.general.AbstractLeastSquaresOptimizer.updateResidualsAndCost():::EXIT: 	
this.cost % orig(this.cost) == 0
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.determineLMDirection(double[], double[], double[], double[]):::ENTER: 	
this.objective[] sorted by <
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.determineLMDirection(double[], double[], double[], double[]):::EXIT: 	
this.objective[] sorted by <
org.apache.commons.math.optimization.general.LevenbergMarquardtOptimizer.determineLMParameter(double[], double, double[], double[], double[], double[]):::EXIT: 	
this.objective[] sorted by <
Patch:  Patch49  Correctness:  Incorrect
[Patch5]: Chart-5-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
this.y has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::ENTER: 	
o1 has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::EXIT: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.compareTo(java.lang.Object):::EXIT: 	
this.y has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.getX():::ENTER: 	
this.y == null
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
this.x has only one value
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
this.y == null
org.jfree.data.xy.XYDataItem.getX():::EXIT: 	
return has only one value
Patch:  Patch5  Correctness:  Incorrect
[Patch51]: Math-70-jGenprog ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch53]: Math-71-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.analysis.solvers.BrentSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double, double, double, double):::ENTER: 	
x0 == 1.8782503200000029E9
org.apache.commons.math.analysis.solvers.BrentSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double, double, double, double):::ENTER: 	
x1 == 1.878250380000003E9
org.apache.commons.math.analysis.solvers.BrentSolver.solve(org.apache.commons.math.analysis.UnivariateRealFunction, double, double, double, double, double, double):::ENTER: 	
x2 == 1.8782503200000029E9
Patch:  Patch53  Correctness:  Incorrect
[Patch54]: Math-73-jGenprog ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch55]: Math-73-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch55  Correctness:  Incorrect
[Patch58]: Math-78-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.ode.sampling.AbstractStepInterpolator.setInterpolatedTime(double):::EXIT: 	
this.interpolatedTime != orig(this.interpolatedTime)
Patch:  Patch58  Correctness:  Incorrect
[Patch59]: Math-80-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.tType one of { -2, 0 }
org.apache.commons.math.linear.EigenDecompositionImpl:::OBJECT: 	
this.dMin == 0.0
org.apache.commons.math.linear.EigenDecompositionImpl.EigenDecompositionImpl(double[], double[], double):::EXIT: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.decompose():::EXIT: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(int):::ENTER: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getEigenvector(int):::EXIT: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues():::ENTER: 	
this.tType == -2
org.apache.commons.math.linear.EigenDecompositionImpl.getRealEigenvalues():::EXIT: 	
this.tType == -2
Patch:  Patch59  Correctness:  Incorrect
[Patch80]: Time-4-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.joda.time.Partial.getChronology():::EXIT: 	
this.iValues[] == orig(this.iValues[])
org.joda.time.Partial.getField(int, org.joda.time.Chronology):::EXIT: 	
this.iValues[] == orig(this.iValues[])
Patch:  Patch80  Correctness:  Incorrect
[Patch81]: Time-4-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.joda.time.Partial.getChronology():::EXIT: 	
this.iValues[] == orig(this.iValues[])
org.joda.time.Partial.getField(int, org.joda.time.Chronology):::EXIT: 	
this.iValues[] == orig(this.iValues[])
Patch:  Patch81  Correctness:  Incorrect
[Patch82]: Time-11-jGenprog ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch82  Correctness:  Incorrect
[Patch83]: Time-11-jKali ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch83  Correctness:  Incorrect
[Patch84]: Time-11-Nopol2015 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch84  Correctness:  Incorrect
[PatchHDRepair10]: Time-19-HDRepair ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch180]: Time-4-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
org.joda.time.Partial.getChronology():::EXIT: 	
this.iValues[] == orig(this.iValues[])
org.joda.time.Partial.getField(int, org.joda.time.Chronology):::EXIT: 	
this.iValues[] == orig(this.iValues[])
Patch:  Patch180  Correctness:  Incorrect
[Patch181]: Time-7-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch181  Correctness:  Incorrect
[Patch182]: Time-11-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch182  Correctness:  Incorrect
[Patch183]: Time-12-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch183  Correctness:  Incorrect
[Patch184]: Time-14-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch185]: Time-16-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch185  Correctness:  Incorrect
[Patch186]: Time-18-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
Patch:  Patch186  Correctness:  Incorrect
[Patch187]: Time-19-Nopol2017 ==> Label(Incorrect)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
[Patch210]: Time-15-ACS ==> Label(Correct)
Correct specifications ...
Error behaviours ...
VIOLATE CORRECt:
MAINTAIN ERROR:
====================================
True overfitting: 86/109
['Patch1', 'Patch152', 'Patch6', 'Patch62', 'Patch63', 'Patch64', 'Patch65', 'Patch66', 'Patch67', 'Patch68', 'Patch69', 'Patch72', 'Patch73', 'Patch74', 'Patch75', 'Patch76', 'Patch77', 'Patch78', 'Patch79', 'Patch8', 'Patch154', 'Patch88', 'Patch9', 'Patch91', 'Patch92', 'Patch155', 'Patch93', 'PatchHDRepair6', 'PatchHDRepair8', 'Patch157', 'Patch16', 'Patch161', 'Patch163', 'Patch165', 'Patch166', 'Patch167', 'Patch168', 'Patch169', 'Patch17', 'Patch170', 'Patch171', 'Patch11', 'Patch172', 'Patch173', 'Patch175', 'Patch176', 'Patch177', 'Patch18', 'Patch12', 'Patch13', 'Patch193', 'Patch198', 'Patch2', 'Patch14', 'Patch202', 'Patch208', 'Patch15', 'Patch22', 'Patch24', 'Patch27', 'Patch28', 'Patch30', 'Patch31', 'Patch32', 'Patch33', 'Patch37', 'Patch38', 'Patch4', 'Patch48', 'Patch49', 'Patch5', 'Patch53', 'Patch55', 'Patch58', 'Patch59', 'Patch80', 'Patch81', 'Patch82', 'Patch83', 'Patch84', 'Patch180', 'Patch181', 'Patch182', 'Patch183', 'Patch185', 'Patch186']
False overfitting: 3/30
['Patch7', 'Patch21', 'Patch26']
===========METRICS==============
Recall: 86/109 = 0.7889908256880734
Precision: 3/89 = 0.9662921348314607
Accuracy: 0.8129496402877698 
F1: 0.8686868686868687 
['Patch7', 'Patch21', 'Patch26']
